name: Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release Tag'
        required: true

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Racket
        uses: Bogdanp/setup-racket@v1.10
        with:
          architecture: x64
          distribution: full
          variant: CS
          version: stable

      - name: Setup Raco
        run: sudo raco setup

      # - name: raco pkg install
      #   run: raco pkg install uuid
      
      - name: Make build-linux-x64
        run: SBOMCC_VERSION=${{ inputs.release_version }} make sbomcc-linux-x64

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "sbomcc-*-linux-x64.zip"
          generateReleaseNotes: true
          tag: ${{ inputs.release_version }}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into ghcr.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ghcr.io/${{ github.repository }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@af5a7ed5ba88268d5278f7203fb52cd833f66d6e # v5.2.0
        with:
          context: .
          push: true
          tags: ghcr.io/sbomcc/sbomcc:${{ inputs.release_version }}
          labels: ${{ steps.meta.outputs.labels }}
